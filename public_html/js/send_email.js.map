{"version":3,"file":"send_email.js","sources":["send_email.js"],"sourcesContent":["/**\n * Handles form submission, validates input, and sends data to the server using AJAX.\n *\n * @param {Event} event - The submit event triggered by the form.\n * @param {string} token - The reCAPTCHA token obtained after user interaction.\n * @returns {void}\n */\nimport displayNotification from './modules/notification.js';\nimport phoneFormatter from './modules/phone_format.js';\nimport initButtonAnimation from './modules/button-animation.js';\n\nphoneFormatter();\n\nconst { animateButton, resetButton } = initButtonAnimation();\n\nconst form = document.getElementById(\"my-form\");\n\nif (!form) {\n  console.error(\"Formularz nie istnieje.\");\n  Sentry.captureException(error, {\n    extra: {\n      url: window.location.href,\n      referrer: document.referrer,\n      userAgent: navigator.userAgent,\n      formData: file,\n    },\n  });\n}\n\n// Pobierz token z generate-token.php\nfetch('/php/generate-token.php')\n  .then(response => response.text())\n  .then(csrfToken => {\n    // Zapisz token w lokalnym storage\n    localStorage.setItem('csrf_token', csrfToken);\n\n    // Dodaj token do formularza\n    const csrfInput = document.createElement('input');\n    csrfInput.type = 'hidden';\n    csrfInput.name = 'csrf_token';\n    csrfInput.value = csrfToken;\n    form.appendChild(csrfInput);\n\n  })\n  .catch(error => {\n    const errorData = {\n      message: 'Błąd pobierania tokena',\n      url: '/php/generate-token.php',\n      method: 'GET',\n    };\n    Sentry.captureException(new Error(errorData.message), {\n      extra: errorData,\n    });\n    console.error('Błąd pobierania tokena:', error)\n  });\n\n/**\n * @description Processes a form submission, validating user input and sending it to\n * a PHP script via an AJAX request. It also displays notifications, resets the form\n * after success, and re-enables the submit button upon completion or failure.\n *\n * @param {Event} event - Used to prevent default form submission behavior.\n *\n * @param {string} token - Used to authenticate reCAPTCHA responses.\n */\nasync function handleSubmit(event, token) {\n  event.preventDefault();\n  // Check if form exists before continuing\n  if (!form) {\n    console.error(\"Form not found.\");\n    return;\n  }\n  \n  // Get form data\n  const formData = {\n    email: document.getElementById(\"email\").value,\n    phone: document.getElementById(\"phone\").value.replace(/\\D/g, ''),\n    name: document.getElementById(\"name\").value,\n    message: document.getElementById(\"message\").value\n  };\n\n  if (!validateFormData(formData)) {\n    return;\n  }\n\n  const submitButton = form.querySelector('button[type=\"submit\"]');\n  if (submitButton) {\n      submitButton.disabled = true;\n  }\n\n  const uniqueID = `${Date.now()}${Math.floor(Math.random() * 1000000).toString(36)}`;\n\n  const csrfToken = localStorage.getItem('csrf_token');\n\n  // Prepare data for sending\n  const data = new FormData();\n  data.append('name', formData.name);\n  data.append('email', formData.email);\n  data.append('phone', formData.phone);\n  data.append('message', formData.message);\n  data.append('g-recaptcha-response', token);\n  data.append('uniqueID', uniqueID);\n  data.append('csrf_token', csrfToken);\n\n  const file = new File([JSON.stringify(formData)], 'form_data.txt', {\n    type: 'text/plain',\n  });\n\n  await sendDataToServer(submitButton, data, file);\n}\n\nform.addEventListener(\"submit\", (event) => {\n  // Handles form submission events.\n  event.preventDefault();\n  grecaptcha.ready(() => {\n      // Executes reCAPTCHA and handles its response.\n      grecaptcha.execute('6LeTFCAqAAAAAKlvDJZjZnVCdtD76hc3YZiIUs_Q', {action: 'submit'})\n      .then((token) => {\n          // Handles ReCAPTCHA responses.\n          if (token) {\n              handleSubmit(event, token);\n          } else {\n              displayNotification(\"ReCAPTCHA verification failed. Please try again.\", 'error');\n          }\n      })\n      .catch((error) => {\n          // Catches ReCAPTCHA errors.\n          console.error(\"ReCAPTCHA error:\", error);\n          displayNotification(\"ReCAPTCHA verification failed. Please try again.\", 'error');\n      });\n  });\n})\n\n/**\n * Validates form data before sending it to the server.\n *\n * @param {Object} formData - Object containing form data.\n *\n * @returns {boolean} - Returns true if form data is valid, false otherwise.\n */\n\nfunction validateFormData(formData) {\n  const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  const mobilePhonePattern = /^[0-9]{9}$/; // Polish mobile phone pattern: 9 digits\n\n  if (!formData.email && !formData.phone) {\n    displayNotification(\"Proszę podać adres email lub numer telefonu.\", 'error');\n    return false;\n  }\n\n  if (formData.email && !emailPattern.test(formData.email)) {\n    displayNotification(\"Proszę podać prawidłowy adres email.\", 'error');\n    return false;\n  }\n\n  if (formData.phone && !mobilePhonePattern.test(formData.phone)) {\n    displayNotification(\"Proszę podać prawidłowy numer telefonu (9 cyfr).\", 'error');\n    return false;\n  }\n  return true;\n}\n\n/**\n * @description Sends form data to a PHP script using the Fetch API. It processes\n * the response, displaying notifications based on the result. It also resets the\n * form after success, re-enables the submit button upon completion, and handles\n * errors gracefully.\n *\n * @param {HTMLElement} submitButton - The form's submit button element.\n * @param {FormData} data - An object containing form data to be sent to the server.\n * @returns {Promise<void>}\n */\nasync function sendDataToServer(submitButton, data, file) {\n  try {\n    const response = await fetch('../php/send_email.php', {\n      method: 'POST',\n      body: data,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Błąd ${response.status}: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n  \n    if (result.success) {\n      displayNotification(result.message, 'success');\n      setTimeout(() => {\n        // Calls animateButton with 'success'.\n        animateButton('success');\n      }, 0);\n      setTimeout(() => {\n        // Calls form.reset() with a delay.\n        form.reset(); // Reset the form after success\n      }, 5000); // Delaying reset after success message\n    } else {\n      displayNotification(result.message, 'error');\n      setTimeout(() => {\n        // Immediately invokes itself.\n        animateButton('error');\n      }, 0);\n    }\n  } catch (error) {\n    console.error(\"Form submission error:\", error.message, error.stack);\n    handleError(file, error);\n  } finally {\n    // Re-enable the submit button\n    submitButton.disabled = false;\n    setTimeout(() => {\n      // Calls `resetButton` after 5 seconds delay.\n      resetButton ();\n    }, 5000);\n  }\n}\n\n/**\n * Captures and handles errors by reporting them to Sentry and notifying the user.\n *\n * This function utilizes Sentry's `captureException` to log the provided error along with \n * additional context, such as form data and specific tags. It also displays a user-friendly \n * error message to inform the user of the encountered issue.\n *\n * @param {Error} error - The error object to be captured and reported.\n * @param {Object} data - The form data associated with the error (should be defined in the scope).\n * @param {Object} [options] - Optional parameters for additional context.\n * @param {string} options.formName - The name of the form where the error occurred, used for tagging.\n * \n * @tags {Object} tags - Tags to categorize the error.\n * @tags.form-name {string} 'kontakt' - The name of the form that triggered the error, aiding in filtering and analysis.\n */\nfunction handleError(file, error) {\n  Sentry.captureException(error, {\n    attachments: [\n      {\n        filename: 'form_data.txt',\n        data: file,\n        contentType: 'text/plain',\n      },\n    ],  \n    tags: {\n      'form-name': 'kontakt',\n    },\n    extra: {\n      url: window.location.href,\n      referrer: document.referrer,\n      userAgent: navigator.userAgent,\n      formData: file,\n    },\n  });\n if (error.message.includes('Błąd')) {\n    displayNotification('Wystąpił błąd. Proszę spróbować ponownie.', 'error');\n  } else {\n    displayNotification('Wystąpił nieoczekiwany błąd. Proszę skontaktować się z administratorem.', 'error');\n  }\n}\n"],"names":["displayNotification","phoneFormatter","initButtonAnimation","animateButton","resetButton","form","document","getElementById","async","handleSubmit","event","token","submitButton","uniqueID","csrfToken","data","preventDefault","validateFormData","formData","email","value","phone","replace","name","message","querySelector","disabled","Date","now","Math","floor","random","toString","localStorage","getItem","FormData","append","await","sendDataToServer","File","JSON","stringify","type","console","error","test","mobilePhonePattern","file","response","fetch","method","body","ok","Error","status","statusText","result","json","success","setTimeout","reset","stack","handleError","Sentry","captureException","attachments","filename","contentType","tags","form-name","extra","url","window","location","href","referrer","userAgent","navigator","includes","then","text","setItem","csrfInput","createElement","appendChild","catch","errorData","addEventListener","grecaptcha","ready","execute","action"],"mappings":"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"}