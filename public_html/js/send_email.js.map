{"version":3,"file":"send_email.js","sources":["send_email.js"],"sourcesContent":["/**\n * Handles form submission, validates input, and sends data to the server using AJAX.\n *\n * @param {Event} event - The submit event triggered by the form.\n * @param {string} token - The reCAPTCHA token obtained after user interaction.\n * @returns {void}\n */\nimport displayNotification from './modules/notification.js';\nimport phoneFormatter from './modules/phone_format.js';\nimport initButtonAnimation from './modules/button-animation.js';\n\nconst form = document.getElementById(\"my-form\");\n\nconst { animateButton, resetButton } = initButtonAnimation();\n\n\n// Pobierz token z generate-token.php\nfetch('/php/generate-token.php')\n  .then(response => response.text())\n  .then(csrfToken => {\n    // Zapisz token w lokalnym storage\n    localStorage.setItem('csrf_token', csrfToken);\n\n    // Dodaj token do formularza\n    const csrfInput = document.createElement('input');\n    csrfInput.type = 'hidden';\n    csrfInput.name = 'csrf_token';\n    csrfInput.value = csrfToken;\n    form.appendChild(csrfInput);\n\n  })\n  .catch(error => {\n    const errorData = {\n      message: 'Błąd pobierania tokena',\n      url: '/php/generate-token.php',\n      method: 'GET',\n    };\n    Sentry.captureException(new Error(errorData.message), {\n      extra: errorData,\n    });\n    console.error('Błąd pobierania tokena:', error)\n  });\n\n/**\n * @description Processes a form submission, validating user input and sending it to\n * a PHP script via an AJAX request. It also displays notifications, resets the form\n * after success, and re-enables the submit button upon completion or failure.\n *\n * @param {Event} event - Used to prevent default form submission behavior.\n *\n * @param {string} token - Used to authenticate reCAPTCHA responses.\n */\nasync function handleSubmit(event, token) {\n  event.preventDefault();\n  // Check if form exists before continuing\n  if (!form) {\n    console.error(\"Form not found.\");\n    Sentry.captureException(error, {\n      extra: {\n        url: window.location.href,\n        referrer: document.referrer,\n        userAgent: navigator.userAgent,\n        formData: file,\n      },\n    });\n    return;\n  }\n\n  phoneFormatter();\n  \n  // Get form data\n  const formData = {\n    email: document.getElementById(\"email\").value,\n    phone: document.getElementById(\"phone\").value.replace(/\\D/g, ''),\n    name: document.getElementById(\"name\").value,\n    message: document.getElementById(\"message\").value\n  };\n\n  if (!validateFormData(formData)) {\n    return;\n  }\n\n  const submitButton = form.querySelector('button[type=\"submit\"]');\n  if (submitButton) {\n      submitButton.disabled = true;\n  }\n\n  const uniqueID = `${Date.now()}${Math.floor(Math.random() * 1000000).toString(36)}`;\n\n  const csrfToken = localStorage.getItem('csrf_token');\n\n  // Prepare data for sending\n  const data = new FormData();\n  data.append('name', formData.name);\n  data.append('email', formData.email);\n  data.append('phone', formData.phone);\n  data.append('message', formData.message);\n  data.append('g-recaptcha-response', token);\n  data.append('uniqueID', uniqueID);\n  data.append('csrf_token', csrfToken);\n\n  const file = new File([JSON.stringify(formData)], 'form_data.txt', {\n    type: 'text/plain',\n  });\n\n  await sendDataToServer(submitButton, data, file);\n}\n\nform.addEventListener(\"submit\", (event) => {\n  // Handles form submission events.\n  event.preventDefault();\n  grecaptcha.ready(() => {\n      // Executes reCAPTCHA and handles its response.\n      grecaptcha.execute('6LeTFCAqAAAAAKlvDJZjZnVCdtD76hc3YZiIUs_Q', {action: 'submit'})\n      .then((token) => {\n          // Handles ReCAPTCHA responses.\n          if (token) {\n              handleSubmit(event, token);\n          } else {\n              displayNotification(\"ReCAPTCHA verification failed. Please try again.\", 'error');\n          }\n      })\n      .catch((error) => {\n          // Catches ReCAPTCHA errors.\n          console.error(\"ReCAPTCHA error:\", error);\n          displayNotification(\"ReCAPTCHA verification failed. Please try again.\", 'error');\n      });\n  });\n})\n\n/**\n * Validates form data before sending it to the server.\n *\n * @param {Object} formData - Object containing form data.\n *\n * @returns {boolean} - Returns true if form data is valid, false otherwise.\n */\n\nfunction validateFormData(formData) {\n  const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  const mobilePhonePattern = /^[0-9]{9}$/; // Polish mobile phone pattern: 9 digits\n\n  if (!formData.email && !formData.phone) {\n    displayNotification(\"Proszę podać adres email lub numer telefonu.\", 'error');\n    return false;\n  }\n\n  if (formData.email && !emailPattern.test(formData.email)) {\n    displayNotification(\"Proszę podać prawidłowy adres email.\", 'error');\n    return false;\n  }\n\n  if (formData.phone && !mobilePhonePattern.test(formData.phone)) {\n    displayNotification(\"Proszę podać prawidłowy numer telefonu (9 cyfr).\", 'error');\n    return false;\n  }\n  return true;\n}\n\n/**\n * @description Sends form data to a PHP script using the Fetch API. It processes\n * the response, displaying notifications based on the result. It also resets the\n * form after success, re-enables the submit button upon completion, and handles\n * errors gracefully.\n *\n * @param {HTMLElement} submitButton - The form's submit button element.\n * @param {FormData} data - An object containing form data to be sent to the server.\n * @returns {Promise<void>}\n */\n\nasync function sendDataToServer(submitButton, data, file) {\n\n\n  try {\n    const response = await fetch('../php/send_email.php', {\n      method: 'POST',\n      body: data,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Błąd ${response.status}: ${response.statusText}`);\n    }\n\n    const result = await response.json();\n  \n    if (result.success) {\n      displayNotification(result.message, 'success');\n      setTimeout(() => {\n        // Calls animateButton with 'success'.\n        animateButton('success');\n      }, 0);\n      setTimeout(() => {\n        // Calls form.reset() with a delay.\n        form.reset(); // Reset the form after success\n      }, 5000); // Delaying reset after success message\n    } else {\n      displayNotification(result.message, 'error');\n      setTimeout(() => {\n        // Immediately invokes itself.\n        animateButton('error');\n      }, 0);\n    }\n  } catch (error) {\n    console.error(\"Form submission error:\", error.message, error.stack);\n    handleError(file, error);\n  } finally {\n    // Re-enable the submit button\n    submitButton.disabled = false;\n    setTimeout(() => {\n      // Calls `resetButton` after 5 seconds delay.\n      resetButton ();\n    }, 5000);\n  }\n}\n\n/**\n * Captures and handles errors by reporting them to Sentry and notifying the user.\n *\n * This function utilizes Sentry's `captureException` to log the provided error along with \n * additional context, such as form data and specific tags. It also displays a user-friendly \n * error message to inform the user of the encountered issue.\n *\n * @param {Error} error - The error object to be captured and reported.\n * @param {Object} data - The form data associated with the error (should be defined in the scope).\n * @param {Object} [options] - Optional parameters for additional context.\n * @param {string} options.formName - The name of the form where the error occurred, used for tagging.\n * \n * @tags {Object} tags - Tags to categorize the error.\n * @tags.form-name {string} 'kontakt' - The name of the form that triggered the error, aiding in filtering and analysis.\n */\nfunction handleError(file, error) {\n  Sentry.captureException(error, {\n    attachments: [\n      {\n        filename: 'form_data.txt',\n        data: file,\n        contentType: 'text/plain',\n      },\n    ],  \n    tags: {\n      'form-name': 'kontakt',\n    },\n    extra: {\n      url: window.location.href,\n      referrer: document.referrer,\n      userAgent: navigator.userAgent,\n      formData: file,\n    },\n  });\n if (error.message.includes('Błąd')) {\n    displayNotification('Wystąpił błąd. Proszę spróbować ponownie.', 'error');\n  } else {\n    displayNotification('Wystąpił nieoczekiwany błąd. Proszę skontaktować się z administratorem.', 'error');\n  }\n}\n\nexport { handleSubmit, validateFormData, sendDataToServer, handleError };"],"names":["displayNotification","phoneFormatter","initButtonAnimation","form","document","getElementById","animateButton","resetButton","async","handleSubmit","event","token","preventDefault","console","error","Sentry","captureException","extra","url","window","location","href","referrer","userAgent","navigator","formData","file","email","value","phone","replace","name","message","validateFormData","submitButton","querySelector","uniqueID","disabled","Date","now","Math","floor","random","toString","csrfToken","localStorage","getItem","data","FormData","append","File","JSON","stringify","type","await","sendDataToServer","test","mobilePhonePattern","response","fetch","method","body","ok","Error","status","statusText","result","json","success","setTimeout","reset","stack","handleError","attachments","filename","contentType","tags","form-name","includes","then","text","setItem","csrfInput","createElement","appendChild","catch","errorData","addEventListener","grecaptcha","ready","execute","action"],"mappings":"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"}