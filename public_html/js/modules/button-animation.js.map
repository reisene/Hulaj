{"version":3,"file":"button-animation.js","sources":["modules/button-animation.js"],"sourcesContent":["    /**\n     * @description Initializes animations for a form submission button. It animates the\n     * button's state when clicked, submits a request, and resets to its original state\n     * upon completion or error.\n     *\n     * @returns {any} An object containing two properties: animateButton and resetButton.\n     */\n    function initButtonAnimation() {\n        const formButton = document.getElementById('my-form-button');\n\n        /**\n         * @description Modifies a UI element's appearance to indicate loading state,\n         * specifically a button and its icon. It hides a plane icon, adds a spinner icon,\n         * and applies a 'loading' class to change the button's style, effectively animating\n         * it into a loading state.\n         */\n        function animateLoading() {\n            formButton.classList.remove('submit')\n            formButton.classList.add('loading');\n            formButton.querySelector('.fa-paper-plane').classList.add('hidden');\n            formButton.querySelector('.fa-spinner').classList.remove('hidden');\n        }\n\n        /**\n         * @description Animates a button based on its type, adding a CSS class to change its\n         * appearance and removing hidden classes from specific icons. It handles two types:\n         * 'success' and 'error', changing the visible icon accordingly.\n         *\n         * @param {string | 'success' | 'error'} type - Used to specify animation types.\n         */\n        function animateButton(type) {\n            if (type === 'success' || type === 'error') {\n                formButton.classList.add(type);\n\n                // Resetowanie animacji\n                formButton.style.animation = 'none'; // Resetuj animację\n                formButton.offsetHeight; // Wymuś reflow\n                formButton.style.animation = ''; // Przywróć animację\n\n                if (type === 'success') {\n                    formButton.querySelector('.fa-check').classList.remove('hidden');\n                } else {\n                    formButton.querySelector('.fa-times').classList.remove('hidden');\n                }\n                formButton.querySelector('.fa-spinner').classList.add('hidden');\n            } \n        }\n        \n        /**\n         * @description Resets a form button to its default state, removing any loading or\n         * status indicators and restoring the initial appearance. It also hides associated\n         * icon elements when applicable.\n         */\n        function resetButton() {\n            if (formButton) {\n                formButton.classList.remove('loading', 'success', 'error');\n                formButton.classList.add('submit');\n                const faCheck = formButton.querySelector('.fa-check');\n                const faTimes = formButton.querySelector('.fa-times');\n                const faSpinner = formButton.querySelector('.fa-spinner');\n                if (faCheck) {\n                    faCheck.classList.add('hidden');\n                }\n                if (faTimes) {\n                    faTimes.classList.add('hidden');\n                }\n                if (faSpinner) {\n                    faSpinner.classList.add('hidden');\n                }\n                const faPaperPlane = formButton.querySelector('.fa-paper-plane');\n                faPaperPlane.setAttribute('class', 'svg-inline--fa fa-paper-plane');\n            } else {\n        Sentry.captureException(new Error('formButton is null'), {\n        extra: {\n            url: window.location.href,\n            referrer: document.referrer,\n            userAgent: navigator.userAgent,\n            formName: 'kontakt',\n            formAction: window.location.href,\n            formMethod: 'POST',\n        },\n        });\n    }\n        }\n\n        // Dodaj klasę loading po kliknięciu przycisku\n        formButton.addEventListener('click', animateLoading);\n\n        // Usuń klasę loading po zakończeniu animacji\n        formButton.addEventListener('transitionend', () => {\n            // Handles form button transitions when they end.\n            if (formButton.classList.contains('loading')) {\n                formButton.classList.remove('loading');\n            }\n        });\n\n        return { animateButton, resetButton };\n    }\n\n    export default initButtonAnimation; // Export the initButtonAnimation function"],"names":["initButtonAnimation","formButton","document","getElementById","addEventListener","classList","remove","add","querySelector","contains","animateButton","type","style","animation","offsetHeight","resetButton","faCheck","faTimes","faSpinner","setAttribute","Sentry","captureException","Error","extra","url","window","location","href","referrer","userAgent","navigator","formName","formAction","formMethod"],"mappings":"AAOI,SAASA,sBACL,IAAMC,EAAaC,SAASC,eAAe,gBAAgB,EAwF3D,OAVAF,EAAWG,iBAAiB,QAtE5B,WACIH,EAAWI,UAAUC,OAAO,QAAQ,EACpCL,EAAWI,UAAUE,IAAI,SAAS,EAClCN,EAAWO,cAAc,iBAAiB,EAAEH,UAAUE,IAAI,QAAQ,EAClEN,EAAWO,cAAc,aAAa,EAAEH,UAAUC,OAAO,QAAQ,CACrE,CAiEmD,EAGnDL,EAAWG,iBAAiB,gBAAiB,KAErCH,EAAWI,UAAUI,SAAS,SAAS,GACvCR,EAAWI,UAAUC,OAAO,SAAS,CAE7C,CAAC,EAEM,CAAEI,cAlET,SAAuBC,GACN,YAATA,GAA+B,UAATA,IACtBV,EAAWI,UAAUE,IAAII,CAAI,EAG7BV,EAAWW,MAAMC,UAAY,OAC7BZ,EAAWa,aACXb,EAAWW,MAAMC,UAAY,IAEhB,YAATF,EACAV,EAAWO,cAAc,WAAW,EAEpCP,EAAWO,cAAc,WAAW,GAFEH,UAAUC,OAAO,QAAQ,EAInEL,EAAWO,cAAc,aAAa,EAAEH,UAAUE,IAAI,QAAQ,EAEtE,EAkDwBQ,YA3CxB,WACI,IAGUC,EACAC,EACAC,EALNjB,GACAA,EAAWI,UAAUC,OAAO,UAAW,UAAW,OAAO,EACzDL,EAAWI,UAAUE,IAAI,QAAQ,EAC3BS,EAAUf,EAAWO,cAAc,WAAW,EAC9CS,EAAUhB,EAAWO,cAAc,WAAW,EAC9CU,EAAYjB,EAAWO,cAAc,aAAa,EACpDQ,GACAA,EAAQX,UAAUE,IAAI,QAAQ,EAE9BU,GACAA,EAAQZ,UAAUE,IAAI,QAAQ,EAE9BW,GACAA,EAAUb,UAAUE,IAAI,QAAQ,EAEfN,EAAWO,cAAc,iBAAiB,EAClDW,aAAa,QAAS,+BAA+B,GAE1EC,OAAOC,iBAAiB,IAAIC,MAAM,oBAAoB,EAAG,CACzDC,MAAO,CACHC,IAAKC,OAAOC,SAASC,KACrBC,SAAU1B,SAAS0B,SACnBC,UAAWC,UAAUD,UACrBE,SAAU,UACVC,WAAYP,OAAOC,SAASC,KAC5BM,WAAY,MAChB,CACA,CAAC,CAED,CAaoC,CACxC,gBAEejC"}