{"version":3,"file":"button-animation.js","names":["initButtonAnimation","formButton","document","getElementById","animateLoading","classList","remove","add","querySelector","animateButton","type","resetButton","faCheck","faTimes","faPaperPlane","setAttribute","Sentry","captureException","Error","extra","foo","addEventListener","contains","_default","exports"],"sources":["modules/button-animation.js"],"sourcesContent":["/**\n * @description Initializes animations for a form submission button. It animates the\n * button's state when clicked, submits a request, and resets to its original state\n * upon completion or error.\n *\n * @returns {any} An object containing two properties: animateButton and resetButton.\n */\nfunction initButtonAnimation() {\n    const formButton = document.getElementById('my-form-button');\n\n    /**\n     * @description Modifies a UI element's appearance to indicate loading state,\n     * specifically a button and its icon. It hides a plane icon, adds a spinner icon,\n     * and applies a 'loading' class to change the button's style, effectively animating\n     * it into a loading state.\n     */\n    function animateLoading() {\n        formButton.classList.remove('submit')\n        formButton.classList.add('loading');\n        formButton.querySelector('.fa-paper-plane').classList.add('hidden');\n        formButton.querySelector('.fa-spinner').classList.remove('hidden');\n    }\n\n    /**\n     * @description Animates a button based on its type, adding a CSS class to change its\n     * appearance and removing hidden classes from specific icons. It handles two types:\n     * 'success' and 'error', changing the visible icon accordingly.\n     *\n     * @param {string | 'success' | 'error'} type - Used to specify animation types.\n     */\n    function animateButton(type) {\n        if (type === 'success' || type === 'error') {\n            formButton.classList.add(type);\n            if (type === 'success') {\n                formButton.querySelector('.fa-check').classList.remove('hidden');\n            } else {\n                formButton.querySelector('.fa-times').classList.remove('hidden');\n            }\n            formButton.querySelector('.fa-spinner').classList.add('hidden');\n        } \n    }\n    \n    /**\n     * @description Resets a form button to its default state, removing any loading or\n     * status indicators and restoring the initial appearance. It also hides associated\n     * icon elements when applicable.\n     */\n    function resetButton() {\n        if (formButton) {\n            formButton.classList.remove('loading', 'success', 'error');\n            formButton.classList.add('submit');\n            const faCheck = formButton.querySelector('.fa-check');\n            const faTimes = formButton.querySelector('.fa-times');\n            if (faCheck) {\n                faCheck.classList.add('hidden');\n            }\n            if (faTimes) {\n                faTimes.classList.add('hidden');\n            }\n            const faPaperPlane = formButton.querySelector('.fa-paper-plane');\n            faPaperPlane.setAttribute('class', 'svg-inline--fa fa-paper-plane');\n        } else {\n    Sentry.captureException(new Error('formButton is null'), {\n      extra: {\n        foo: 'bar',\n      },\n    });\n  }\n    }\n\n    // Dodaj klasę loading po kliknięciu przycisku\n    formButton.addEventListener('click', animateLoading);\n\n    // Usuń klasę loading po zakończeniu animacji\n    formButton.addEventListener('transitionend', () => {\n        // Handles form button transitions when they end.\n        if (formButton.classList.contains('loading')) {\n            formButton.classList.remove('loading');\n        }\n    });\n\n    return { animateButton, resetButton };\n}\n\nexport default initButtonAnimation;"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmBA,CAAA,EAAG;EAC3B,IAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;;EAE5D;AACJ;AACA;AACA;AACA;AACA;EACI,SAASC,cAAcA,CAAA,EAAG;IACtBH,UAAU,CAACI,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;IACrCL,UAAU,CAACI,SAAS,CAACE,GAAG,CAAC,SAAS,CAAC;IACnCN,UAAU,CAACO,aAAa,CAAC,iBAAiB,CAAC,CAACH,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;IACnEN,UAAU,CAACO,aAAa,CAAC,aAAa,CAAC,CAACH,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;EACtE;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,SAASG,aAAaA,CAACC,IAAI,EAAE;IACzB,IAAIA,IAAI,KAAK,SAAS,IAAIA,IAAI,KAAK,OAAO,EAAE;MACxCT,UAAU,CAACI,SAAS,CAACE,GAAG,CAACG,IAAI,CAAC;MAC9B,IAAIA,IAAI,KAAK,SAAS,EAAE;QACpBT,UAAU,CAACO,aAAa,CAAC,WAAW,CAAC,CAACH,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;MACpE,CAAC,MAAM;QACHL,UAAU,CAACO,aAAa,CAAC,WAAW,CAAC,CAACH,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;MACpE;MACAL,UAAU,CAACO,aAAa,CAAC,aAAa,CAAC,CAACH,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;IACnE;EACJ;;EAEA;AACJ;AACA;AACA;AACA;EACI,SAASI,WAAWA,CAAA,EAAG;IACnB,IAAIV,UAAU,EAAE;MACZA,UAAU,CAACI,SAAS,CAACC,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC;MAC1DL,UAAU,CAACI,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;MAClC,IAAMK,OAAO,GAAGX,UAAU,CAACO,aAAa,CAAC,WAAW,CAAC;MACrD,IAAMK,OAAO,GAAGZ,UAAU,CAACO,aAAa,CAAC,WAAW,CAAC;MACrD,IAAII,OAAO,EAAE;QACTA,OAAO,CAACP,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;MACnC;MACA,IAAIM,OAAO,EAAE;QACTA,OAAO,CAACR,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;MACnC;MACA,IAAMO,YAAY,GAAGb,UAAU,CAACO,aAAa,CAAC,iBAAiB,CAAC;MAChEM,YAAY,CAACC,YAAY,CAAC,OAAO,EAAE,+BAA+B,CAAC;IACvE,CAAC,MAAM;MACXC,MAAM,CAACC,gBAAgB,CAAC,IAAIC,KAAK,CAAC,oBAAoB,CAAC,EAAE;QACvDC,KAAK,EAAE;UACLC,GAAG,EAAE;QACP;MACF,CAAC,CAAC;IACJ;EACE;;EAEA;EACAnB,UAAU,CAACoB,gBAAgB,CAAC,OAAO,EAAEjB,cAAc,CAAC;;EAEpD;EACAH,UAAU,CAACoB,gBAAgB,CAAC,eAAe,EAAE,YAAM;IAC/C;IACA,IAAIpB,UAAU,CAACI,SAAS,CAACiB,QAAQ,CAAC,SAAS,CAAC,EAAE;MAC1CrB,UAAU,CAACI,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC;IAC1C;EACJ,CAAC,CAAC;EAEF,OAAO;IAAEG,aAAa,EAAbA,aAAa;IAAEE,WAAW,EAAXA;EAAY,CAAC;AACzC;AAAC,IAAAY,QAAA,GAAAC,OAAA,cAEcxB,mBAAmB","ignoreList":[]}