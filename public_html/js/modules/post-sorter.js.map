{"version":3,"file":"post-sorter.js","sources":["modules/post-sorter.js"],"sourcesContent":["/**\n * Sorts a collection of post articles based on their titles or dates.\n *\n * @param {string} type - The type of sorting (date-asc, date-desc, title-asc, title-desc).\n * @param {jQuery} postsContainer - The container element for the posts.\n */\nfunction sortPosts(type, postsContainer) {\n    const posts = $('.post-article').get();\n  \n    posts.sort((a, b) => {\n      // Sorts array elements.\n      const titleA = $(a).find('h2').text().toUpperCase();\n      const titleB = $(b).find('h2').text().toUpperCase();\n      const dateA = new Date($(a).find('.post-date').text().trim());\n      const dateB = new Date($(b).find('.post-date').text().trim());\n  \n      switch (type) {\n        case 'date-asc':\n          return dateA - dateB;\n        case 'date-desc':\n          return dateB - dateA;\n        case 'title-asc':\n          return titleA > titleB ? 1 : -1;\n        case ' title-desc':\n          return titleA < titleB ? 1 : -1;\n        default:\n          return 0;\n      }\n    });\n  \n    // Append the sorted posts to the container\n    postsContainer.empty().append(posts);\n  }\n  \n  export default sortPosts;"],"names":["sortPosts","type","postsContainer","posts","$","get","sort","a","b","titleA","find","text","toUpperCase","titleB","dateA","Date","trim","dateB","empty","append"],"mappings":"AAMA,SAASA,UAAUC,EAAMC,GACrB,IAAMC,EAAQC,EAAE,eAAe,EAAEC,IAAI,EAErCF,EAAMG,KAAK,CAACC,EAAGC,KAEb,IAAMC,EAASL,EAAEG,CAAC,EAAEG,KAAK,IAAI,EAAEC,KAAK,EAAEC,YAAY,EAC5CC,EAAST,EAAEI,CAAC,EAAEE,KAAK,IAAI,EAAEC,KAAK,EAAEC,YAAY,EAC5CE,EAAQ,IAAIC,KAAKX,EAAEG,CAAC,EAAEG,KAAK,YAAY,EAAEC,KAAK,EAAEK,KAAK,CAAC,EACtDC,EAAQ,IAAIF,KAAKX,EAAEI,CAAC,EAAEE,KAAK,YAAY,EAAEC,KAAK,EAAEK,KAAK,CAAC,EAE5D,OAAQf,GACN,IAAK,WACH,OAAOa,EAAQG,EACjB,IAAK,YACH,OAAOA,EAAQH,EACjB,IAAK,YACH,OAAgBD,EAATJ,EAAkB,EAAI,CAAC,EAChC,IAAK,cACH,OAAOA,EAASI,EAAS,EAAI,CAAC,EAChC,QACE,OAAO,CACX,CACF,CAAC,EAGDX,EAAegB,MAAM,EAAEC,OAAOhB,CAAK,CACrC,gBAEeH"}